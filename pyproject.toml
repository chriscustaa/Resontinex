[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "resontinex"
version = "0.1.1"
description = "RESONTINEX Fusion Optimization System"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pyyaml>=6.0",
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "ruff>=0.1.6",
    "black>=23.11.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "bandit>=1.7.5",
    "isort>=5.12.0",
    "yamllint>=1.33.0",
    "mypy>=1.8.0",
]

[tool.ruff]
# Ruff configuration for code quality
target-version = "py38"
line-length = 120
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "S",   # bandit
]
ignore = [
    "E501",  # line too long, handled by black
    "S101",  # use of assert
    "S608",  # hardcoded SQL query
    "ARG002", # unused method argument
    "ARG001", # unused function argument
]

# Exclude directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "ARG", "S106"]  # Allow asserts and test-specific patterns
"scripts/*" = ["S108", "S105"]      # Allow temp files and hardcoded passwords in scripts

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--cov=resontinex",
    "--cov-report=term-missing",
    "--cov-report=html:test_results/coverage",
    "--cov-fail-under=80",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.bandit]
exclude_dirs = ["tests", "test_results"]
skips = ["B101", "B601", "B608"]  # Skip assert, shell injection (controlled usage), SQL injection (controlled usage)

[tool.coverage.run]
source = ["resontinex", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
# Strict mode for fusion_ops module
python_version = "3.8"
strict = true
files = ["fusion_ops/**/*.py"]
ignore_missing_imports = true
show_error_codes = true
warn_return_any = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# Incremental adoption - start strict on fusion_ops, relax for others
[[tool.mypy.overrides]]
module = [
    "resontinex.*",
    "scripts.*",
    "tests.*"
]
ignore_missing_imports = true
check_untyped_defs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false